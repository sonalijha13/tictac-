#include <iostream>
using namespace std;

char space[3][3] = {{'1', '2', '3'}, {'4', '5', '6'}, {'7', '8','9'}}; // Fixed missing semicolon
int row;
int column;
char token = 'x';
bool tie = false;
string n1 = "";
string n2 = "";

void functionOne() {
    cout << "Enter the name of the first player: \n";
    getline(cin, n1);
    cout << "Enter the name of the second player: \n";
    getline(cin, n2);

    cout << n1 << " is player1, so he/she will play first. \n";
    cout << n2 << " is player2, so he/she will play second. \n";

    // Display the initial Tic-Tac-Toe board
    cout << "    |      |   \n";
    cout << " " << space[0][0] << "  | " << space[0][1] << "    |  " << space[0][2] << " \n";
    cout << " ___|______|___\n";
    cout << "    |      |  \n";
    cout << " " << space[1][0] << "  | " << space[1][1] << "    |  " << space[1][2] << " \n";
    cout << " ___|______|___\n";
    cout << "    |      |  \n";
    cout << " " << space[2][0] << "  | " << space[2][1] << "    |  " << space[2][2] << " \n";
    cout << "    |      |  \n";
}

void functionTwo() {
    int digit;
    if (token == 'x') {
        cout << n1 << ", please enter a number: ";
        cin >> digit;
    }
    if (token == '0') {
        cout << n2 << ", please enter a number: ";
        cin >> digit;
    }

    if (digit == 1) { row = 0; column = 0; }
    if (digit == 2) { row = 0; column = 1; }
    if (digit == 3) { row = 0; column = 2; }
    if (digit == 4) { row = 1; column = 0; }
    if (digit == 5) { row = 1; column = 1; }
    if (digit == 6) { row = 1; column = 2; }
    if (digit == 7) { row = 2; column = 0; }
    if (digit == 8) { row = 2; column = 1; }
    if (digit == 9) { row = 2; column = 2; }
    else {
        cout << "Invalid!!!" << endl;
    }

    if (token == 'x' && space[row][column] != 'x' && space[row][column] != '0') {
        space[row][column] = 'x';
        token = '0';  // Switch to player '0'
    }
    else if (token == '0' && space[row][column] != 'x' && space[row][column] != '0') {
        space[row][column] = '0';
        token = 'x';  // Switch to player 'x'
    }
    else {
        cout << "There is no empty space! " << endl;
        functionTwo();  // Recursively ask for input
    }
}

bool functionThree() {
    // Check for horizontal, vertical and diagonal win conditions
    for (int i = 0; i < 3; i++) {
        if (space[i][0] == space[i][1] && space[i][0] == space[i][2] || space[0][i] == space[1][i] && space[0][i] == space[2][i]) {
            return true;
        }
    }
    if (space[0][0] == space[1][1] && space[1][1] == space[2][2] || space[0][2] == space[1][1] && space[1][1] == space[2][0]) {
        return true;
    }

    // Check for tie (no empty spaces left)
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (space[i][j] != 'x' && space[i][j] != '0') {
                return false;
            }
        }
    }
    tie = true;  // The game is a tie if no empty spaces are left
    return false;
}

int main() {
    functionOne();  // Initialize player names and display the board

    while (!functionThree()) {
        functionTwo();  // Players take turns
        functionThree();  // Check for win or tie
    }

    if (token == 'x' && !tie) {
        cout << n1 << " Wins!!" << endl;
    }
    else if (token == '0' && !tie) {
        cout << n2 << " Wins!!" << endl;
    }
    else {
        cout << "It's a draw!" << endl;
    }

    return 0;
}



   
